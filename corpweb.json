{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "AllowedValues": ["t2.micro", "t2.small"],
      "Default": "t2.micro"
    },
    "KeyPair": {
      "Description": "EC2 KeyPair for SSH",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "YourIp": {
      "Description": "Your public IP in CIDR",
      "Type": "String",
      "Default": "172.56.10.188/32"
    }
  },
  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "Tags": [{ "Key": "Name", "Value": "EngineeringVpc" }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "VpcGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [{ "Key": "Name", "Value": "PulicSubnet1"}]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [{ "Key": "Name", "Value": "PulicSubnet2"}]
      }
    },
    "WebserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "GroupDescription": "Web Servers SG",
        "SecurityGroupIngress": [
          { "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0" },
          { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": { "Ref": "YourIp" } }
        ]
      }
    },
    "Web1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "ImageId": "ami-01cc34ab2709337aa",
        "SubnetId": { "Ref": "PublicSubnet1" },
        "KeyName": { "Ref": "KeyPair" },
        "SecurityGroupIds": [{ "Ref": "WebserversSG" }],
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
          "#!/bin/bash\n",
          "yum update -y\n",
          "yum install -y git httpd php\n",
          "service httpd start\n",
          "chkconfig httpd on\n",
          "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
        ]] } }
      }
    },
    "Web2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "ImageId": "ami-01cc34ab2709337aa",
        "SubnetId": { "Ref": "PublicSubnet2" },
        "KeyName": { "Ref": "KeyPair" },
        "SecurityGroupIds": [{ "Ref": "WebserversSG" }],
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
          "#!/bin/bash\n",
          "yum update -y\n",
          "yum install -y git httpd php\n",
          "service httpd start\n",
          "chkconfig httpd on\n",
          "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
        ]] } }
      }
    },
    "EngineeringLB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "EngineeringLB",
        "Scheme": "internet-facing",
        "Subnets": [{ "Ref": "PublicSubnet1" }, { "Ref": "PublicSubnet2" }],
        "SecurityGroups": [{ "Ref": "WebserversSG" }]
      }
    },
    "EngineeringWebservers": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "EngineeringWebservers",
        "VpcId": { "Ref": "EngineeringVpc" },
        "Port": 80,
        "Protocol": "HTTP",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckPort": "80",
        "HealthCheckPath": "/",
        "Targets": [
          { "Id": { "Ref": "Web1" }, "Port": 80 },
          { "Id": { "Ref": "Web2" }, "Port": 80 }
        ]
      }
    },
    "EngineeringLBListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": {
          "Ref": "EngineeringLB"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": { 
              "Ref": "EngineeringWebservers"}
          }
        ]
      
      }
    }
  },
  "Outputs": {
    "WebUrl": {
      "Description": "Load Balancer DNS Name",
      "Value": { "Fn::GetAtt": ["EngineeringLB", "DNSName"] }
    }
  }
}

